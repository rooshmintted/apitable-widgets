/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import { Checkbox } from '../../../../components/checkbox';
import React from 'react';
const selectValue = (value, selected, all) => {
    const at = all.indexOf(value);
    const updated = selected.slice(0, at).concat(value, selected.slice(at));
    // As inserting values at predefined index positions doesn't work with empty
    // arrays, we need to reorder the updated selection to match the initial order
    return updated.sort((a, b) => all.indexOf(a) > all.indexOf(b));
};
const deselectValue = (value, selected) => {
    return selected.filter((v) => v !== value);
};
export const CheckboxesWidget = ({ id, options, value, onChange, }) => {
    const { enumOptions, enumDisabled } = options;
    const _onChange = (option, checked) => {
        const all = enumOptions.map(({ value }) => value);
        if (checked) {
            onChange(selectValue(option.value, value, all));
        }
        else {
            onChange(deselectValue(option.value, value));
        }
    };
    return (React.createElement(React.Fragment, null, enumOptions.map((option, index) => {
        const checked = value.indexOf(option.value) !== -1;
        const itemDisabled = Boolean(enumDisabled && enumDisabled.indexOf(option.value) !== -1);
        return (React.createElement("div", { key: `${id}_${index}`, style: { display: 'flex' } },
            React.createElement(Checkbox, { checked: checked, disabled: itemDisabled, onChange: (value) => _onChange(option, value) }, option.label)));
    })));
};
