/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/// <reference types="socket.io-client" />
export declare enum WidgetCliSocketType {
    LiveReload = "liveReload"
}
declare type IWidgetCLiSocketResponseData = null;
declare type ICallBack = (data?: {
    success: boolean;
    error?: any;
    data?: IWidgetCLiSocketResponseData;
}) => void;
interface IWidgetCliSocket {
    socket: SocketIOClient.Socket & {
        loading?: boolean;
    };
    eventMap: Map<WidgetCliSocketType, ICallBack[]>;
    on: (type: WidgetCliSocketType, cb: ICallBack) => void;
    destroy: (type?: WidgetCliSocketType, cb?: ICallBack) => void;
}
export declare const initWidgetCliSocket: (origin: string, type: WidgetCliSocketType) => IWidgetCliSocket;
export {};
//# sourceMappingURL=widgetCliSocket.d.ts.map