/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import { IWidgetContext } from '../interface';
/**
 * Datasheet row operations and information.
 *
 * Get the rows record, you can use {@link useRecord} (querying single record data), {@link useRecords} (batch query of record data)
 */
export declare class Record {
    datasheetId: string;
    protected wCtx: IWidgetContext;
    recordId: string;
    /**
     * @hidden
     */
    constructor(datasheetId: string, wCtx: IWidgetContext, recordId: string);
    private getRecordData;
    private getFieldRole;
    /**
     * Gets the cell value of the given field for this record.
     *
     * @param fieldId The field ID whose cell value you'd like to get.
     * @returns
     *
     * #### Example
     * ```js
     * const cellValue = myRecord.getCellValue(mySingleLineTextFieldId);
     * console.log(cellValue);
     * // => 'cell value'
     * ```
     */
    getCellValue(fieldId: string): any;
    /**
     * @hidden
     */
    _getCellValue(fieldId: string): any;
    /**
     * Gets the cell value of the given field of record, and convert to string type.
     *
     * @returns
     *
     * #### Example
     * ```js
     * const stringValue = myRecord.getCellValueString(myNumberFieldId);
     * console.log(stringValue);
     * // => '42'
     * ```
     */
    getCellValueString(fieldId: string): string | null;
    /**
     *
     * The URL address of the record, which you can access in your browser,
     * opens the Wiggle Table interface and locates the record
     *
     * @param viewId
     * @returns
     *
     */
    url(viewId?: string): string;
    /**
     * The ID for this record.
     */
    get id(): string;
    /**
     * The primary cell value in this record, formatted as a string.
     *
     * @returns
     *
     * #### Example
     * ```js
     * console.log(myRecord.title);
     * // => '42'
     * ```
     */
    get title(): string | null;
    /**
     * The number of comments on this record.
     * @returns
     *
     */
    get commentCount(): number;
}
//# sourceMappingURL=record.d.ts.map