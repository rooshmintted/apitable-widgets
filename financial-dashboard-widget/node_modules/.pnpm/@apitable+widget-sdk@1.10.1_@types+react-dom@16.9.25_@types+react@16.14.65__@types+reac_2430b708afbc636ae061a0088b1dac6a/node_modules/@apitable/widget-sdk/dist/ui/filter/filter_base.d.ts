import { IExpression, IExpressionOperand } from '@apitable/core';
interface IFilterProps {
    filter?: IExpression;
    datasheetId: string;
    hasParent?: boolean;
    path?: string;
    onChange?: (filter: IExpressionOperand) => void;
    depth?: number;
}
/**
 * This is a recursively rendered component with up to 3 levels of nesting. Renders S-expressions as nested grouped conditional filters.
 * Supports adding, removing and modifying filter conditions.
 * Expression Classification
 * + Basic expressions
 *   + The first operand is always a field of the specified table
 *   + The operator is the specified operator. bool Related
 *   + The third is the user input value, which can be static or dynamic
 * + Grouping expressions
 *   + or / and concatenated expressions. It can be a base expression or a grouping expression
 */
export declare const FilterBase: (props: IFilterProps) => JSX.Element;
export {};
//# sourceMappingURL=filter_base.d.ts.map