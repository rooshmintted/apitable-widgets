/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { IconButtonStyle } from './styled';
export const IconButton = (_a) => {
    var { icon: IconComponent, size = 'small', variant = 'default', disabled = false, active = false, component = 'div' } = _a, restProps = __rest(_a, ["icon", "size", "variant", "disabled", "active", "component"]);
    if (!IconComponent)
        return null;
    const sizeMap = {
        small: 16,
        large: 24
    };
    const extraProps = component === 'button' ? { type: 'button' } : {};
    return (React.createElement(IconButtonStyle, Object.assign({ as: component, size: size, variant: variant, disabled: disabled, active: active }, restProps, extraProps),
        React.createElement(IconComponent, { size: sizeMap[size], currentColor: true })));
};
