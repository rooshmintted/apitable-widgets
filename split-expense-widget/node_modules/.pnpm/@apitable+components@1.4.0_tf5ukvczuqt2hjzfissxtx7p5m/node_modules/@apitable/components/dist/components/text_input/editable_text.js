import * as React from 'react';
import { useState } from 'react';
import styled from 'styled-components';
import { EditOutlined } from '@apitable/icons';
import { TextInput } from './text_input';
import { Typography } from '../typography';
import { Box } from '../box';
const StyledOutlined = styled(EditOutlined) `
  margin-left: 4px;
`;
const StyledBox = styled(Box) `
  ${StyledOutlined} {
    visibility: hidden;
  }

  cursor: pointer;

  :hover {
    ${StyledOutlined} {
      visibility: visible;
    }
  }
`;
export const EditableText = ({ value, placeholder, className, onChange }) => {
    const [isEditing, setEditing] = useState(false);
    if (isEditing) {
        return (React.createElement(TextInput, { size: "small", placeholder: placeholder, autoFocus: true, block: true, defaultValue: value, onBlur: (e) => {
                onChange === null || onChange === void 0 ? void 0 : onChange(e.target.value);
                setEditing(false);
            } }));
    }
    return (React.createElement(StyledBox, { onClick: () => setEditing(true), onDoubleClick: () => setEditing(true), display: 'inline-flex', alignItems: 'center' },
        React.createElement(Typography, { variant: "h6", className: className }, value !== null && value !== void 0 ? value : placeholder),
        React.createElement(StyledOutlined, null)));
};
