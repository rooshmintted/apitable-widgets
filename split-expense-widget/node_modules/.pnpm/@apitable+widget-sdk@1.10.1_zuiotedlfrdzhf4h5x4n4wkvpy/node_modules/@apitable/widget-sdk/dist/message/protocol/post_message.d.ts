import { IContentWindow, IResponse, MessageType } from './interface';
import { Protocol } from './protocol';
/**
 * Communication by post message.
 * For sandbox rendering widget.
 */
export declare class PostMessage extends Protocol {
    enable: boolean;
    /**
     * As the window that sends the message, it can communicate with more than one window,
     * and there can be more than one window.
     */
    private contentWindows;
    constructor();
    emit(type: MessageType, data: IResponse, key?: string, messageId?: string, allowTimeout?: boolean): Promise<unknown>;
    /**
     * Add window
     * @param key Unique window ID, generally widgetId for applet forms, and datasheet for main threads.
     * @param window
     */
    addWindow(key: string, window: IContentWindow): void;
    /**
     * Remove window
     * @param widgetId
     */
    removeWindow(key: string): void;
}
export declare const postMessage: any;
//# sourceMappingURL=post_message.d.ts.map