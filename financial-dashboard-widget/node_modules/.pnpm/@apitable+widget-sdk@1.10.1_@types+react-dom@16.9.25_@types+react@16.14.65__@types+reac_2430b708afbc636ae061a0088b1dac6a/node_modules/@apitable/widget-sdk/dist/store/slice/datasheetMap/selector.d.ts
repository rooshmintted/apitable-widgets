import { Role } from '../../../core';
import { IWidgetState } from '../../../interface';
import { IFieldPermissionMap } from '../../../core';
export declare const isCurrentDatasheetActive: (state: IWidgetState, currentDatasheetId?: string) => boolean;
export declare const getSnapshot: (state: IWidgetState, datasheetId?: string) => import("../../../core").ISnapshot | null;
export declare const getViews: (state: IWidgetState, datasheetId?: string) => import("../../../core").IViewProperty[] | undefined;
export declare const getFieldPermissionMap: (state: IWidgetState, datasheetId?: string) => IFieldPermissionMap | undefined;
export declare const getView: import("re-reselect").ParametricSelector<IWidgetState, string, {
    columns: import("@apitable/core").IViewColumn[];
    id: string;
    type: import("@apitable/core").ViewType.Grid;
    frozenColumnCount: number;
    rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
    autoHeadHeight?: boolean | undefined;
    groupInfo?: import("@apitable/core").IGroupInfo | undefined;
    name: string;
    rows: import("../../../core").IViewRow[];
    autoSave?: boolean | undefined;
    description?: string | undefined;
    hidden?: boolean | undefined;
    filterInfo?: import("@apitable/core").IFilterInfo | undefined;
    sortInfo?: import("@apitable/core").ISortInfo | undefined;
    lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
    displayHiddenColumnWithinMirror?: boolean | undefined;
} | {
    columns: import("@apitable/core").IViewColumn[];
    type: import("@apitable/core").ViewType.Gallery;
    style: import("@apitable/core").IGalleryViewStyle;
    groupInfo?: import("@apitable/core").IGroupInfo | undefined;
    id: string;
    name: string;
    rows: import("../../../core").IViewRow[];
    autoSave?: boolean | undefined;
    description?: string | undefined;
    hidden?: boolean | undefined;
    filterInfo?: import("@apitable/core").IFilterInfo | undefined;
    sortInfo?: import("@apitable/core").ISortInfo | undefined;
    lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
    displayHiddenColumnWithinMirror?: boolean | undefined;
} | {
    columns: import("@apitable/core").IViewColumn[];
    type: import("@apitable/core").ViewType.Kanban;
    groupInfo?: import("@apitable/core").IGroupInfo | undefined;
    style: import("@apitable/core").IKanbanStyle;
    id: string;
    name: string;
    rows: import("../../../core").IViewRow[];
    autoSave?: boolean | undefined;
    description?: string | undefined;
    hidden?: boolean | undefined;
    filterInfo?: import("@apitable/core").IFilterInfo | undefined;
    sortInfo?: import("@apitable/core").ISortInfo | undefined;
    lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
    displayHiddenColumnWithinMirror?: boolean | undefined;
} | {
    columns: import("@apitable/core").IViewColumn[];
    id: string;
    type: import("@apitable/core").ViewType.Gantt;
    style: import("@apitable/core").IGanttViewStyle;
    groupInfo?: import("@apitable/core").IGroupInfo | undefined;
    frozenColumnCount: number;
    rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
    autoHeadHeight?: boolean | undefined;
    name: string;
    rows: import("../../../core").IViewRow[];
    autoSave?: boolean | undefined;
    description?: string | undefined;
    hidden?: boolean | undefined;
    filterInfo?: import("@apitable/core").IFilterInfo | undefined;
    sortInfo?: import("@apitable/core").ISortInfo | undefined;
    lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
    displayHiddenColumnWithinMirror?: boolean | undefined;
} | {
    columns: import("@apitable/core").IViewColumn[];
    id: string;
    type: import("@apitable/core").ViewType.Calendar;
    frozenColumnCount: number;
    rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
    groupInfo?: import("@apitable/core").IGroupInfo | undefined;
    style: import("@apitable/core").ICalendarViewStyle;
    name: string;
    rows: import("../../../core").IViewRow[];
    autoSave?: boolean | undefined;
    description?: string | undefined;
    hidden?: boolean | undefined;
    filterInfo?: import("@apitable/core").IFilterInfo | undefined;
    sortInfo?: import("@apitable/core").ISortInfo | undefined;
    lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
    displayHiddenColumnWithinMirror?: boolean | undefined;
} | {
    columns: import("@apitable/core").IViewColumn[];
    type: import("@apitable/core").ViewType.OrgChart;
    groupInfo?: import("@apitable/core").IGroupInfo | undefined;
    style: import("@apitable/core").IOrgChartViewStyle;
    id: string;
    name: string;
    rows: import("../../../core").IViewRow[];
    autoSave?: boolean | undefined;
    description?: string | undefined;
    hidden?: boolean | undefined;
    filterInfo?: import("@apitable/core").IFilterInfo | undefined;
    sortInfo?: import("@apitable/core").ISortInfo | undefined;
    lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
    displayHiddenColumnWithinMirror?: boolean | undefined;
} | undefined> & {
    resultFunc: (res1: import("../../../core").IViewProperty[] | undefined, res2: IFieldPermissionMap | undefined, res3: string, res4: false | import("@apitable/core").IMirror | null | undefined) => {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Grid;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        autoHeadHeight?: boolean | undefined;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.Gallery;
        style: import("@apitable/core").IGalleryViewStyle;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.Kanban;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").IKanbanStyle;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Gantt;
        style: import("@apitable/core").IGanttViewStyle;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        autoHeadHeight?: boolean | undefined;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Calendar;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").ICalendarViewStyle;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.OrgChart;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").IOrgChartViewStyle;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | undefined;
    dependencies: [import("re-reselect").ParametricSelector<IWidgetState, string, import("../../../core").IViewProperty[] | undefined>, import("re-reselect").ParametricSelector<IWidgetState, string, IFieldPermissionMap | undefined>, import("re-reselect").ParametricSelector<IWidgetState, string, string>, import("re-reselect").ParametricSelector<IWidgetState, string, false | import("@apitable/core").IMirror | null | undefined>];
    recomputations: () => number;
    resetRecomputations: () => number;
} & {
    getMatchingSelector: (state: IWidgetState, props: string, ...args: any[]) => import("re-reselect").OutputParametricSelector<IWidgetState, string, {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Grid;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        autoHeadHeight?: boolean | undefined;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.Gallery;
        style: import("@apitable/core").IGalleryViewStyle;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.Kanban;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").IKanbanStyle;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Gantt;
        style: import("@apitable/core").IGanttViewStyle;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        autoHeadHeight?: boolean | undefined;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Calendar;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").ICalendarViewStyle;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.OrgChart;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").IOrgChartViewStyle;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | undefined, (res1: import("../../../core").IViewProperty[] | undefined, res2: IFieldPermissionMap | undefined, res3: string, res4: false | import("@apitable/core").IMirror | null | undefined) => {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Grid;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        autoHeadHeight?: boolean | undefined;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.Gallery;
        style: import("@apitable/core").IGalleryViewStyle;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.Kanban;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").IKanbanStyle;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Gantt;
        style: import("@apitable/core").IGanttViewStyle;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        autoHeadHeight?: boolean | undefined;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        id: string;
        type: import("@apitable/core").ViewType.Calendar;
        frozenColumnCount: number;
        rowHeightLevel?: import("@apitable/core").RowHeightLevel | undefined;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").ICalendarViewStyle;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | {
        columns: import("@apitable/core").IViewColumn[];
        type: import("@apitable/core").ViewType.OrgChart;
        groupInfo?: import("@apitable/core").IGroupInfo | undefined;
        style: import("@apitable/core").IOrgChartViewStyle;
        id: string;
        name: string;
        rows: import("../../../core").IViewRow[];
        autoSave?: boolean | undefined;
        description?: string | undefined;
        hidden?: boolean | undefined;
        filterInfo?: import("@apitable/core").IFilterInfo | undefined;
        sortInfo?: import("@apitable/core").ISortInfo | undefined;
        lockInfo?: import("@apitable/core").IViewLockInfo | undefined;
        displayHiddenColumnWithinMirror?: boolean | undefined;
    } | undefined, [import("re-reselect").ParametricSelector<IWidgetState, string, import("../../../core").IViewProperty[] | undefined>, import("re-reselect").ParametricSelector<IWidgetState, string, IFieldPermissionMap | undefined>, import("re-reselect").ParametricSelector<IWidgetState, string, string>, import("re-reselect").ParametricSelector<IWidgetState, string, false | import("@apitable/core").IMirror | null | undefined>]>;
    removeMatchingSelector: (state: IWidgetState, props: string, ...args: any[]) => void;
    clearCache: () => void;
    cache: import("re-reselect").ICacheObject;
    keySelector: import("re-reselect").ParametricKeySelector<IWidgetState, string>;
};
export declare const getFieldMap: import("reselect").OutputParametricSelector<IWidgetState, string | undefined, import("../../../core").IFieldMap | undefined, (res1: import("@apitable/core").IMeta | undefined, res2: IFieldPermissionMap | undefined) => import("../../../core").IFieldMap | undefined>;
export declare const getWidgetDatasheet: (state: IWidgetState, id?: string) => import("../../../interface").IDatasheetMain | null | undefined;
export declare const getFieldRoleByFieldId: (fieldPermissionMap: IFieldPermissionMap | undefined, fieldId: string) => null | Role;
export declare const getActiveViewId: (state: IWidgetState, id?: string) => string | undefined;
export declare const getWidgetDatasheetPack: (state: IWidgetState, id?: string) => import("../../../interface").IWidgetDatasheetState | null | undefined;
export declare const getSelection: (state: IWidgetState) => import("../../../core").ISelection | null | undefined;
export declare const getPermissions: (state: IWidgetState, id?: string) => import("../../../core").IPermissions | undefined;
export declare const getViewById: (state: IWidgetState, datasheetId: string, viewId: string) => import("../../../core").IViewProperty | null | undefined;
export declare const getVisibleColumns: (state: IWidgetState, datasheetId: string, viewId: string) => import("@apitable/core").IViewColumn[];
export declare const getPrimaryFieldId: (state: IWidgetState, datasheetId?: string) => string | undefined;
//# sourceMappingURL=selector.d.ts.map