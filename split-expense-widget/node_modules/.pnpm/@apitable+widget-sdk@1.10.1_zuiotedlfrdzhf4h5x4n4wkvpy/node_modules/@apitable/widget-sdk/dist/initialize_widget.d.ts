/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import React from 'react';
export declare enum WidgetLoadError {
    UrlIllegal = 1,
    PackageIdNotMatch = 2,
    CretInvalid = 3,
    LoadError = 4,
    CliLowVersion = 5,
    UnknownError = -1
}
export declare function loadWidget(url: string, widgetPackageId: string, refresh?: boolean): Promise<React.FC<{}>>;
export declare function initializeWidget(Component: React.FC<React.PropsWithChildren<unknown>>, widgetPackageId: string | undefined): void;
/**
 * distinguish whether the browser restriction is not lifted when the widget loads with an error
 * @param bundleUrl
 */
export declare function checkCretInvalid(bundleUrl: string): Promise<unknown>;
interface IWidgetConfig {
    sandbox?: boolean;
    packageId?: string;
}
/**
 * get sandbox configuration in widget development mode
 * @param bundleUrl bundleUrl path
 */
export declare function getWidgetConfig(bundleUrl: string): Promise<IWidgetConfig>;
/**
 * check for widget dev mode loading
 * @param bundleUrl path of the widget bundleUrl
 * @param widgetPackageId
 */
export declare function loadWidgetCheck(bundleUrl: string, widgetPackageId: string): Promise<IWidgetConfig>;
interface ICliInfo {
    version: string;
}
/**
 * cli version check
 */
export declare function checkCliVersion(bundleUrl: string): Promise<ICliInfo>;
export {};
//# sourceMappingURL=initialize_widget.d.ts.map