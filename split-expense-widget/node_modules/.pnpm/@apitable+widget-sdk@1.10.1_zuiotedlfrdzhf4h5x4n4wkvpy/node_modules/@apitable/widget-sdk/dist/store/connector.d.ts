/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
import { IReduxState, ICollaborator } from '../core';
import { IWidgetDatasheetState, IWidgetPermission, IWidgetState } from '../interface';
export declare const getWidgetErrorCode: (state: IReduxState, widgetId: string) => number | null | undefined;
/**
  * init widgetState;
  * @param state
  * @param widgetId
  */
export declare const initRootWidgetState: (state: IReduxState, widgetId: string, opt?: {
    foreignDatasheetIds?: string[];
}) => IWidgetState;
/**
  * Aggregate widget permissions.
  * @param state
  * @param widgetId
  */
export declare const aggregationWidgetPermission: (state: IReduxState, widgetId: string) => IWidgetPermission;
/**
  * Aggregate widget collaborators.
  * Change according to the node you are currently at.
  * @param state
  */
export declare const aggregationWidgetCollaborators: (state: IReduxState) => ICollaborator[];
/**
  * Get the datasheet state required by the widget in one go.
  */
export declare const widgetDatasheetSelector: (state: IReduxState, datasheetId: string, foreign?: boolean) => IWidgetDatasheetState | null;
//# sourceMappingURL=connector.d.ts.map