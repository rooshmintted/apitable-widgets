import { ReactElement } from 'react';
import { Placement } from '@floating-ui/react';
import React from 'react';
export { setIndex } from './useFloatUiDropdown';
import { Middleware } from '@floating-ui/dom';
declare type IDropdownTriggerProps = {
    visible: boolean;
    toggle?: () => void;
};
export declare type IOverLayProps = {
    toggle: () => void;
};
declare type IDropdownTriggerFC = (props: IDropdownTriggerProps) => ReactElement;
declare type ITriggerProps = ReactElement | IDropdownTriggerFC;
export interface IDropdownProps {
    clazz?: {
        overlay?: string;
    };
    className?: string;
    options?: {
        zIndex?: number;
        disabled?: boolean;
        placement?: Placement;
        arrow?: boolean;
        offset?: number;
        autoWidth?: boolean;
        selectedIndex?: number;
        stopPropagation?: boolean;
        visible?: boolean;
        disableClick?: boolean;
    };
    setTriggerRef?: (ref: HTMLElement | null) => void;
    middleware?: Array<Middleware>;
    onVisibleChange?: (visible: boolean) => void;
    children: (props: IOverLayProps) => ReactElement;
    trigger: ITriggerProps;
}
export interface IDropdownControl {
    close: () => void;
    open: () => void;
    toggle: (open: Boolean) => void;
    resetIndex?: () => void;
}
export declare const Dropdown: React.ForwardRefExoticComponent<IDropdownProps & React.RefAttributes<IDropdownControl>>;
//# sourceMappingURL=index.d.ts.map