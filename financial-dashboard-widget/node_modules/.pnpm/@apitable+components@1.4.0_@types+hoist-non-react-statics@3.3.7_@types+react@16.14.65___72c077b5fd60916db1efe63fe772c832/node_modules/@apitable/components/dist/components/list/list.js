/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { ListFooterStyled, ListHeaderStyled, ListStyled } from './styled';
import { ListItem } from './item';
export const List = React.forwardRef((_a, ref) => {
    var { children, header, footer, data, renderItem } = _a, resetProps = __rest(_a, ["children", "header", "footer", "data", "renderItem"]);
    const renderInnerItem = (d, index) => {
        return renderItem ? renderItem(d, index) :
            typeof d === 'string' ? React.createElement(ListItem, { key: index }, d) : React.createElement(ListItem, Object.assign({ key: index }, d));
    };
    return (React.createElement(ListStyled, Object.assign({}, resetProps, { ref: ref }),
        Boolean(header) && React.createElement(ListHeaderStyled, null, header),
        data ? data.map(renderInnerItem) : children,
        Boolean(footer) && React.createElement(ListFooterStyled, null, footer)));
});
