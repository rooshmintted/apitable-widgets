import { FOperator, IField, IFieldMap, IViewColumn, IExpression } from '@apitable/core';
export declare const getFields: (columns: IViewColumn[], fieldMap: IFieldMap) => IField[];
export declare const getOperatorOptions: (field: IField) => {
    value: FOperator;
    label: any;
}[];
export declare const getBooleanOptionName: (value: string) => string;
export declare const filterData: {
    filter: {
        type: string;
        value: {
            operands: ({
                type: string;
                value: {
                    operands: ({
                        type: string;
                        value: string;
                    } | {
                        type: string;
                        value: number;
                    })[];
                    operator: string;
                };
            } | {
                type: string;
                value: {
                    operands: {
                        type: string;
                        value: {
                            operands: ({
                                type: string;
                                value: string;
                            } | {
                                type: string;
                                value: number;
                            })[];
                            operator: string;
                        };
                    }[];
                    operator: string;
                };
            })[];
            operator: string;
        };
    };
    datasheetId: {
        type: string;
        value: string;
    };
};
export declare const getPathIndex: (path: string) => number;
export declare enum FilterTypeEnums {
    Filter = "filter",
    FilterGroup = "filterGroup"
}
export declare const getAddFilterOptions: (depth: number) => {
    value: FilterTypeEnums;
    label: string;
    subLabel: string;
}[];
export declare const addNewFilter: (filter: IExpression, type: FilterTypeEnums, primaryField?: IField) => IExpression;
//# sourceMappingURL=helper.d.ts.map